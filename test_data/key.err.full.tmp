Metadata(columns=["col1","col2"],key_len=1)
rows: 16 columns: 2
<select> [col1] <where> (col1<=>1) (col2<=>1);
Query(where_cols=["col1","col2"],where_vals=[1,1],select_cols=["col1"])
[[1],[1]]
log: range scan for first 1 columns
=================================================================
==27183==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60c00000c000 at pc 0x000000420600 bp 0x7ffcb584b720 sp 0x7ffcb584b710
READ of size 8 at 0x60c00000c000 thread T0
    #0 0x4205ff in bool __gnu_cxx::__ops::_Iter_less_val::operator()<__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long const>(__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long const&) const /usr/include/c++/6/bits/predefined_ops.h:56
    #1 0x41a8ca in std::pair<__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > > > std::__equal_range<__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long, __gnu_cxx::__ops::_Iter_less_val, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long const&, __gnu_cxx::__ops::_Iter_less_val, __gnu_cxx::__ops::_Val_less_iter) /usr/include/c++/6/bits/stl_algo.h:2135
    #2 0x41455c in std::pair<__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > > > std::equal_range<__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long>(__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, __gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long const&) /usr/include/c++/6/bits/stl_algo.h:2189
    #3 0x409a57 in IntColumn::equal_range(RowRange const&, long) const /home/ks/a/planty-db/src/source.cc:69
    #4 0x411490 in TablePlayground::run(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<long, std::allocator<long> >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, OutputFrame&) /home/ks/a/planty-db/src/source.cc:347
    #5 0x407109 in main_loop(CmdArgs const&) /home/ks/a/planty-db/src/source.cc:446
    #6 0x407d6d in main /home/ks/a/planty-db/src/source.cc:466
    #7 0x7eff2834e82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #8 0x403f48 in _start (/home/ks/a/planty-db/src/debug.e+0x403f48)

0x60c00000c000 is located 0 bytes to the right of 128-byte region [0x60c00000bf80,0x60c00000c000)
allocated by thread T0 here:
    #0 0x7eff28d5efb0 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.3+0xc7fb0)
    #1 0x429122 in __gnu_cxx::new_allocator<long>::allocate(unsigned long, void const*) /usr/include/c++/6/ext/new_allocator.h:104
    #2 0x425631 in std::allocator_traits<std::allocator<long> >::allocate(std::allocator<long>&, unsigned long) /usr/include/c++/6/bits/alloc_traits.h:436
    #3 0x4202b9 in std::_Vector_base<long, std::allocator<long> >::_M_allocate(unsigned long) /usr/include/c++/6/bits/stl_vector.h:170
    #4 0x419fba in void std::vector<long, std::allocator<long> >::_M_emplace_back_aux<long const&>(long const&) /usr/include/c++/6/bits/vector.tcc:412
    #5 0x4140f0 in std::vector<long, std::allocator<long> >::push_back(long const&) /usr/include/c++/6/bits/stl_vector.h:924
    #6 0x4092bd in IntColumn::push_back(long) /home/ks/a/planty-db/src/source.cc:61
    #7 0x40e771 in Table::read(InputFrame&) /home/ks/a/planty-db/src/source.cc:269
    #8 0x406d72 in main_loop(CmdArgs const&) /home/ks/a/planty-db/src/source.cc:435
    #9 0x407d6d in main /home/ks/a/planty-db/src/source.cc:466
    #10 0x7eff2834e82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /usr/include/c++/6/bits/predefined_ops.h:56 in bool __gnu_cxx::__ops::_Iter_less_val::operator()<__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long const>(__gnu_cxx::__normal_iterator<long const*, std::vector<long, std::allocator<long> > >, long const&) const
Shadow bytes around the buggy address:
  0x0c187fff97b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff97c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff97d0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c187fff97e0: 00 00 00 00 00 00 00 00 fa fa fa fa fa fa fa fa
  0x0c187fff97f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c187fff9800:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9820: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9830: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9840: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c187fff9850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==27183==ABORTING
